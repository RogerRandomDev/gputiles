[gd_scene load_steps=5 format=3 uid="uid://bydkiaetlt45n"]

[ext_resource type="Script" path="res://gpumap.gd" id="1_8oj6w"]
[ext_resource type="Texture2D" uid="uid://cxfit2544mil0" path="res://icon.png" id="1_rrfo0"]

[sub_resource type="Shader" id="Shader_iha7d"]
code = "shader_type canvas_item;
uniform sampler2D tileset;
uniform sampler2D usedTiles;
uniform vec2 chunkSize=vec2(8,8);
uniform int tileCount=1;

float getTile(vec2 input){
	return texture(usedTiles,round((input)*chunkSize-vec2(0.5))/chunkSize).r;
}
vec4 getPos(float tile,vec2 input){
	vec2 inp = input*chunkSize;
	while(inp.x>1.||inp.y>1.){
		if(inp.x>1.){inp.x--;}
		if(inp.y>1.){inp.y--;}}
	vec4 output =texture(tileset,vec2(inp.x,inp.y)/vec2(1,float(tileCount)),0.);
	return (output);
}

void fragment() {
	float tileId=getTile(UV);
	COLOR.a=0.0;
	if(tileId!=0.){
	vec4 tilepos = getPos(tileId,(UV));
	COLOR=tilepos;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fh02r"]
shader = SubResource( "Shader_iha7d" )
shader_param/chunkSize = Vector2(8, 8)
shader_param/tileCount = 2
shader_param/tileset = ExtResource( "1_rrfo0" )
shader_param/usedTiles = ExtResource( "1_rrfo0" )

[node name="gpumap" type="ColorRect"]
material = SubResource( "ShaderMaterial_fh02r" )
rect_min_size = Vector2(512, 512)
offset_right = 512.0
offset_bottom = 512.0
mouse_filter = 2
script = ExtResource( "1_8oj6w" )
